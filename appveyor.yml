version: 2.9.0.{build}
image: 
  - Visual Studio 2019
  - Visual Studio 2017
  - Visual Studio 2015
  - Visual Studio 2013
platform: 
  - x64
  - x86
configuration: 
  - Release
  - Debug
cache:
  - C:\cache
matrix:
  allow_failures:
    - platform: x86
    - configuration: Debug
    - image: Visual Studio 2017
    - image: Visual Studio 2015
    - image: Visual Studio 2013
build: off
test: off

for:
  -
    matrix:
      only:
        - image: Visual Studio 2019
          configuration: Release
          platform: x64
    install:
      - dir /b C:\cache || mkdir C:\cache
      - set winfsp=winfsp-1.6.20027.msi
      - if not exist C:\cache\%winfsp% (   
          appveyor DownloadFile https://github.com/billziss-gh/winfsp/releases/download/v1.6/%winfsp% -FileName C:\cache\%winfsp%
        )
      - start /wait msiexec /i C:\cache\%winfsp% /qn ADDLOCAL=ALL
      - wslconfig /u Ubuntu-18.04
      #- rd /s /q C:\WSL\Ubuntu1804
      #- ps: tools\setup_wsl.ps1
      - if not exist C:\cache\ubuntu1804.tar ( 
          powershell -File tools\setup_wsl.ps1
          echo Exporting...
          wsl --export Ubuntu-18.04 C:\cache\ubuntu1804.tar
        ) else (
          echo Importing...
          wsl --import Ubuntu-18.04 C:\MyWSL C:\cache\ubuntu1804.tar
        )
      - C:\Python37\python -m pip install --disable-pip-version-check paramiko pyyaml psutil >NUL
      - C:\Python37\python tools\setupssh.py support@localhost support
      - ps: $env:Version = C:\Python37\python -c "import re; print(re.search(r'<MyVersion>([0-9\.]+)</MyVersion>.+', open('src\\version.xml').read().replace('\n','')).group(1))" | Out-String
      - echo Version=%Version%
      - echo Configuration=%CONFIGURATION% Platform=%PLATFORM%
    build_script:
      - msbuild src\golddrive.sln -p:Configuration=%CONFIGURATION% -m:4 /verbosity:minimal /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"
      - start /wait msiexec /i src\build\%CONFIGURATION%\%PLATFORM%\golddrive-%Version%-%PLATFORM%.msi /qn
      - src\build\%CONFIGURATION%\%PLATFORM%\golddrive.exe --version
    test:
      categories:
        only:
          - Appveyor
    after_test:
      - ps: |
          net use Z: \\golddrive\support@localhost
          Z:; cd Z:\tmp; echo hello > test.txt; dir; cd
      - ps: |
          $sw = [Diagnostics.Stopwatch]::StartNew()
          C:\projects\golddrive\tools\fstools\fsx.exe -N 5000 test xxxxxx
          C:\projects\golddrive\tools\fstools\fsbench-x64.exe --files=100 -rdwr_cc_* -mmap_* -file_attr* -file_list_single* -file_list_none* -rdwr_nc_*
          C:\projects\golddrive\tools\iozone\iozone.exe -i0 -i1 -i2 -s 1m -s10m -r1m
          $sw.Stop(); Write-host "Time: " $sw.Elapsed.totalseconds
      - ps: |
          C:; net use Z: /d
      - set LOCAL
      # LocalAppData=C:\Users\appveyor\AppData\Local
      - ps: get-content -tail 30 $env:LOCALAPPDATA\golddrive\golddrive.log
  -
    matrix:
      only:
        - image: Visual Studio 2017
        - image: Visual Studio 2015
        - image: Visual Studio 2013
    install:
      - appveyor DownloadFile https://github.com/billziss-gh/winfsp/releases/download/v1.6/winfsp-1.6.20027.msi
      - start /wait msiexec /i winfsp-1.6.20027.msi /qn ADDLOCAL=ALL
      - ps: $env:Version = C:\Python37\python -c "import re; print(re.search(r'<MyVersion>([0-9\.]+)</MyVersion>.+', open('src\\version.xml').read().replace('\n','')).group(1))" | Out-String
      - echo Version=%Version%
      - echo Configuration=%CONFIGURATION% Platform=%PLATFORM%
      - appveyor DownloadFile https://github.com/sganis/golddrive/releases/download/v%Version%/golddrive-%Version%-%PLATFORM%.msi
      # - appveyor DownloadFile "https://ci.appveyor.com/api/projects/sganis/golddrive/artifacts/src/build/%CONFIGURATION%/%PLATFORM%/golddrive-%Version%-%PLATFORM%.msi?job=Image%3A Visual Studio 2019%3B Configuration%3A %CONFIGURATION%%3B Platform%3A %PLATFORM%"
      # - curl -fsSL -o golddrive-%Version%-%PLATFORM%.msi "https://ci.appveyor.com/api/projects/sganis/golddrive/artifacts/src/build/%CONFIGURATION%/%PLATFORM%/golddrive-%Version%-%PLATFORM%.msi?job=Image%3A+Visual+Studio+2019%3B+Configuration%3A+%CONFIGURATION%%3B+Platform%3A+%PLATFORM%"
      - start /wait msiexec /i golddrive-%Version%-%PLATFORM%.msi /qn 
      - if %PLATFORM% == x64 call "c:\Program Files\Golddrive\golddrive.exe" --version"
      - if %PLATFORM% == x86 call "c:\Program Files (x86)\Golddrive\golddrive.exe" --version"
    build: off
    test: off

artifacts:
  - path: src\build\$(configuration)\$(platform)\golddrive-*.msi
    name: Golddrive
